User Registration & login:

Endpoint: /auth/register
Method: POST
Purpose: Allows users to register by providing a username and password.
User Login:

Endpoint: /auth/login
Method: POST
Purpose: Allows users to log in by providing their username and password. Returns an access token upon successful login, which should be used for authentication in subsequent requests.

-----

Companion functionality:

Endpoint: /companion/create
Method: POST
Purpose: Allows users to create a companion associated with their account. Requires an authentication token in the request header (Authorization: Bearer <access_token>).

-----

Companion Training:

Endpoint: /companion/training_status
Method: GET
Purpose: Allows users to check the training status of their companions. Requires an authentication token in the request header (Authorization: Bearer <access_token>).

Endpoint: /companion/start_training/<companion_id>
Method: POST
Purpose: Allows users to enroll a companion into a training course. The course duration will be calculated based on the companion's level and training requirements.

Endpoint: /companion/finish_training/<companion_id>
Method: POST
Purpose: Marks the completion of the training course for a companion. This endpoint should be triggered automatically after the course duration has passed, or when the user manually finishes the course.

-----

Protected Route:

Endpoint: /protected-route
Method: GET
Purpose: A protected route that requires authentication. It can be used as a test endpoint to check if the authentication token is valid. An example of how to protect a route

-----

Matchmaking:

Endpoint: /matchmaking
Method: POST
Purpose: Allows users to search for opponents based on specified ranges of companion stats for battling.

-----

Items and Inventory:

Endpoint: /items
Method: GET
Purpose: Allows users to view their inventory of items.

Endpoint: /items/equip/<item_id>
Method: POST
Purpose: Allows users to equip a weapon from the armory to a companion.

Endpoint: /items/unequip/<item_id>
Method: POST
Purpose: Allows users to unequip a weapon from a companion and move it back to the inventory.

Endpoint: /armory
Method: GET
Purpose: Allows users to view their armory where only weapons are stored.

Endpoint: /armory/move_to_inventory/<item_id>
Method: POST
Purpose: Allows users to move a weapon from the armory back to the inventory.

-----

Battling:

Endpoint: /battle/start
Method: POST
Purpose: Initiates a real-time turn-based battle between two users' companions using websockets.

Endpoint: /battle/status
Method: GET
Purpose: Allows users to check the status of an ongoing battle.

Endpoint: /battle/finish
Method: POST
Purpose: Ends an ongoing battle and determines the winner.

-----

User Profile and Companions:

Endpoint: /profile/<user_id>
Method: GET
Purpose: Allows users to view another user's profile and their companions.

Endpoint: /companions/<companion_name>
Method: GET
Purpose: Allows users to view a companion.

Endpoint: /profile/edit
Method: PUT
Purpose: Allows users to edit their own profile information.

Endpoint: /profile
Method: PUT
Purpose: Allows users to view their own profile.

-----

Chat Area:

Endpoint: /chat/boards
Method: GET
Purpose: Allows users to view available boards for creating and viewing posts.

Endpoint: /chat/posts/<board_id>
Method: GET
Purpose: Allows users to view posts within a specific board.

Endpoint: /chat/posts/create
Method: POST
Purpose: Allows users to create a post in a specific board.

Endpoint: /chat/posts/<post_id>/replies
Method: GET
Purpose: Allows users to view replies to a specific post.

Endpoint: /chat/posts/<post_id>/replies/create
Method: POST
Purpose: Allows users to create a reply to a specific post.